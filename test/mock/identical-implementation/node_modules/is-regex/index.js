'use strict';

const has = require('has');
const regexExec = RegExp.prototype.exec;
const gOPD = Object.getOwnPropertyDescriptor;

const tryRegexExecCall = function tryRegexExec(value) {
    try {
        var lastIndex = value.lastIndex;
        value.lastIndex = 0;

        regexExec.call(value);
        return true;
    } catch (e) {
        return false;
    } finally {
        value.lastIndex = lastIndex;
    }
};
const toStr = Object.prototype.toString;
const regexClass = '[object RegExp]';
const hasToStringTag =
    typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isRegex(value) {
    if (!value || typeof value !== 'object') {
        return false;
    }
    if (!hasToStringTag) {
        return toStr.call(value) === regexClass;
    }

    const descriptor = gOPD(value, 'lastIndex');
    const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
    if (!hasLastIndexDataProperty) {
        return false;
    }

    return tryRegexExecCall(value);
};
